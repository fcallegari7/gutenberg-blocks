{"version":3,"sources":["@wordpress/blocks/src/api/index.native.js"],"names":["cloneBlock","createBlock","switchToBlockType","default","parse","getBlockAttributes","parseWithAttributeSchema","serialize","getBlockContent","getBlockDefaultClassName","getSaveContent","registerBlockType","unregisterBlockType","getFreeformContentHandlerName","setUnregisteredTypeHandlerName","getUnregisteredTypeHandlerName","getBlockType","getBlockTypes","getBlockSupport","hasBlockSupport","isReusableBlock","getChildBlockNames","hasChildBlocks","hasChildBlocksWithInserterSupport","setDefaultBlockName","getDefaultBlockName","isUnmodifiedDefaultBlock","normalizeIconObject","pasteHandler","getPhrasingContentSchema","children"],"mappings":"AAAA,SACCA,UADD,EAECC,WAFD,EAGCC,iBAHD,QAIO,WAJP;AAKA,SACCC,OAAO,IAAIC,KADZ,EAECC,kBAFD,EAGCC,wBAHD,QAIO,UAJP;AAKA,SACCH,OAAO,IAAII,SADZ,EAECC,eAFD,EAGCC,wBAHD,EAICC,cAJD,QAKO,cALP;AAMA,SACCC,iBADD,EAECC,mBAFD,EAGCC,6BAHD,EAICC,8BAJD,EAKCC,8BALD,EAMCC,YAND,EAOCC,aAPD,EAQCC,eARD,EASCC,eATD,EAUCC,eAVD,EAWCC,kBAXD,EAYCC,cAZD,EAaCC,iCAbD,EAcCC,mBAdD,EAeCC,mBAfD,QAgBO,gBAhBP;AAiBA,SACCC,wBADD,EAECC,mBAFD,QAGO,SAHP;AAIA,SAASC,YAAT,EAAuBC,wBAAvB,QAAuD,gBAAvD;AACA,SAAS1B,OAAO,IAAI2B,QAApB,QAAoC,YAApC","sourcesContent":["export {\n\tcloneBlock,\n\tcreateBlock,\n\tswitchToBlockType,\n} from './factory';\nexport {\n\tdefault as parse,\n\tgetBlockAttributes,\n\tparseWithAttributeSchema,\n} from './parser';\nexport {\n\tdefault as serialize,\n\tgetBlockContent,\n\tgetBlockDefaultClassName,\n\tgetSaveContent,\n} from './serializer';\nexport {\n\tregisterBlockType,\n\tunregisterBlockType,\n\tgetFreeformContentHandlerName,\n\tsetUnregisteredTypeHandlerName,\n\tgetUnregisteredTypeHandlerName,\n\tgetBlockType,\n\tgetBlockTypes,\n\tgetBlockSupport,\n\thasBlockSupport,\n\tisReusableBlock,\n\tgetChildBlockNames,\n\thasChildBlocks,\n\thasChildBlocksWithInserterSupport,\n\tsetDefaultBlockName,\n\tgetDefaultBlockName,\n} from './registration';\nexport {\n\tisUnmodifiedDefaultBlock,\n\tnormalizeIconObject,\n} from './utils';\nexport { pasteHandler, getPhrasingContentSchema } from './raw-handling';\nexport { default as children } from './children';\n"]}