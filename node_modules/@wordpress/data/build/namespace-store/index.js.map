{"version":3,"sources":["@wordpress/data/src/namespace-store/index.js"],"names":["createNamespace","key","options","registry","reducer","store","createReduxStore","resolvers","actions","mapActions","metadataActions","selectors","mapSelectors","metadataSelectors","selector","state","args","metadata","isRegistrySelector","root","result","mapResolvers","getSelectors","getActions","__unstableOriginalGetState","getState","subscribe","listener","lastState","hasChanged","middlewares","promise","controls","normalizedControls","control","isRegistryControl","push","enhancers","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","name","instanceId","initialState","enhancedReducer","metadataReducer","createStateSelector","registrySelector","runSelector","argsLength","arguments","length","Array","i","hasResolver","createBoundAction","action","Promise","resolve","dispatch","mappedResolvers","resolver","fulfill","resolverFulfill","mapSelector","selectorName","selectorResolver","fulfillSelector","isFulfilled","hasStartedResolution","startResolution","fulfillResolver","finishResolution"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { createStore, applyMiddleware } from 'redux';\nimport {\n\tflowRight,\n\tget,\n\tmapValues,\n} from 'lodash';\nimport combineReducers from 'turbo-combine-reducers';\n\n/**\n * WordPress dependencies\n */\nimport createReduxRoutineMiddleware from '@wordpress/redux-routine';\n\n/**\n * Internal dependencies\n */\nimport promise from '../promise-middleware';\nimport createResolversCacheMiddleware from '../resolvers-cache-middleware';\nimport metadataReducer from './metadata/reducer';\nimport * as metadataSelectors from './metadata/selectors';\nimport * as metadataActions from './metadata/actions';\n\n/**\n * @typedef {import('../registry').WPDataRegistry} WPDataRegistry\n */\n\n/**\n * Creates a namespace object with a store derived from the reducer given.\n *\n * @param {string}         key      Unique namespace identifier.\n * @param {Object}         options  Registered store options, with properties\n *                                  describing reducer, actions, selectors, and\n *                                  resolvers.\n * @param {WPDataRegistry} registry Registry reference.\n *\n * @return {Object} Store Object.\n */\nexport default function createNamespace( key, options, registry ) {\n\tconst reducer = options.reducer;\n\tconst store = createReduxStore( key, options, registry );\n\n\tlet resolvers;\n\tconst actions = mapActions( {\n\t\t...metadataActions,\n\t\t...options.actions,\n\t}, store );\n\tlet selectors = mapSelectors( {\n\t\t...mapValues( metadataSelectors, ( selector ) => ( state, ...args ) => selector( state.metadata, ...args ) ),\n\t\t...mapValues( options.selectors, ( selector ) => {\n\t\t\tif ( selector.isRegistrySelector ) {\n\t\t\t\tselector.registry = registry;\n\t\t\t}\n\n\t\t\treturn ( state, ...args ) => selector( state.root, ...args );\n\t\t} ),\n\t}, store );\n\tif ( options.resolvers ) {\n\t\tconst result = mapResolvers( options.resolvers, selectors, store );\n\t\tresolvers = result.resolvers;\n\t\tselectors = result.selectors;\n\t}\n\n\tconst getSelectors = () => selectors;\n\tconst getActions = () => actions;\n\n\t// We have some modules monkey-patching the store object\n\t// It's wrong to do so but until we refactor all of our effects to controls\n\t// We need to keep the same \"store\" instance here.\n\tstore.__unstableOriginalGetState = store.getState;\n\tstore.getState = () => store.__unstableOriginalGetState().root;\n\n\t// Customize subscribe behavior to call listeners only on effective change,\n\t// not on every dispatch.\n\tconst subscribe = store && function( listener ) {\n\t\tlet lastState = store.__unstableOriginalGetState();\n\t\tstore.subscribe( () => {\n\t\t\tconst state = store.__unstableOriginalGetState();\n\t\t\tconst hasChanged = state !== lastState;\n\t\t\tlastState = state;\n\n\t\t\tif ( hasChanged ) {\n\t\t\t\tlistener();\n\t\t\t}\n\t\t} );\n\t};\n\n\t// This can be simplified to just { subscribe, getSelectors, getActions }\n\t// Once we remove the use function.\n\treturn {\n\t\treducer,\n\t\tstore,\n\t\tactions,\n\t\tselectors,\n\t\tresolvers,\n\t\tgetSelectors,\n\t\tgetActions,\n\t\tsubscribe,\n\t};\n}\n\n/**\n * Creates a redux store for a namespace.\n *\n * @param {string}         key      Unique namespace identifier.\n * @param {Object}         options  Registered store options, with properties\n *                                  describing reducer, actions, selectors, and\n *                                  resolvers.\n * @param {WPDataRegistry} registry Registry reference.\n *\n * @return {Object} Newly created redux store.\n */\nfunction createReduxStore( key, options, registry ) {\n\tconst middlewares = [\n\t\tcreateResolversCacheMiddleware( registry, key ),\n\t\tpromise,\n\t];\n\n\tif ( options.controls ) {\n\t\tconst normalizedControls = mapValues( options.controls, ( control ) => {\n\t\t\treturn control.isRegistryControl ? control( registry ) : control;\n\t\t} );\n\t\tmiddlewares.push( createReduxRoutineMiddleware( normalizedControls ) );\n\t}\n\n\tconst enhancers = [\n\t\tapplyMiddleware( ...middlewares ),\n\t];\n\tif ( typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ) {\n\t\tenhancers.push( window.__REDUX_DEVTOOLS_EXTENSION__( { name: key, instanceId: key } ) );\n\t}\n\n\tconst { reducer, initialState } = options;\n\tconst enhancedReducer = combineReducers( {\n\t\tmetadata: metadataReducer,\n\t\troot: reducer,\n\t} );\n\n\treturn createStore(\n\t\tenhancedReducer,\n\t\t{ root: initialState },\n\t\tflowRight( enhancers )\n\t);\n}\n\n/**\n * Maps selectors to a store.\n *\n * @param {Object} selectors Selectors to register. Keys will be used as the\n *                           public facing API. Selectors will get passed the\n *                           state as first argument.\n * @param {Object} store     The store to which the selectors should be mapped.\n *\n * @return {Object} Selectors mapped to the provided store.\n */\nfunction mapSelectors( selectors, store ) {\n\tconst createStateSelector = ( registrySelector ) => {\n\t\tconst selector = function runSelector() {\n\t\t\t// This function is an optimized implementation of:\n\t\t\t//\n\t\t\t//   selector( store.getState(), ...arguments )\n\t\t\t//\n\t\t\t// Where the above would incur an `Array#concat` in its application,\n\t\t\t// the logic here instead efficiently constructs an arguments array via\n\t\t\t// direct assignment.\n\t\t\tconst argsLength = arguments.length;\n\t\t\tconst args = new Array( argsLength + 1 );\n\t\t\targs[ 0 ] = store.__unstableOriginalGetState();\n\t\t\tfor ( let i = 0; i < argsLength; i++ ) {\n\t\t\t\targs[ i + 1 ] = arguments[ i ];\n\t\t\t}\n\n\t\t\treturn registrySelector( ...args );\n\t\t};\n\t\tselector.hasResolver = false;\n\t\treturn selector;\n\t};\n\n\treturn mapValues( selectors, createStateSelector );\n}\n\n/**\n * Maps actions to dispatch from a given store.\n *\n * @param {Object} actions    Actions to register.\n * @param {Object} store      The redux store to which the actions should be mapped.\n * @return {Object}           Actions mapped to the redux store provided.\n */\nfunction mapActions( actions, store ) {\n\tconst createBoundAction = ( action ) => ( ...args ) => {\n\t\treturn Promise.resolve( store.dispatch( action( ...args ) ) );\n\t};\n\n\treturn mapValues( actions, createBoundAction );\n}\n\n/**\n * Returns resolvers with matched selectors for a given namespace.\n * Resolvers are side effects invoked once per argument set of a given selector call,\n * used in ensuring that the data needs for the selector are satisfied.\n *\n * @param {Object} resolvers   Resolvers to register.\n * @param {Object} selectors   The current selectors to be modified.\n * @param {Object} store       The redux store to which the resolvers should be mapped.\n * @return {Object}            An object containing updated selectors and resolvers.\n */\nfunction mapResolvers( resolvers, selectors, store ) {\n\tconst mappedResolvers = mapValues( resolvers, ( resolver ) => {\n\t\tconst { fulfill: resolverFulfill = resolver } = resolver;\n\t\treturn { ...resolver, fulfill: resolverFulfill };\n\t} );\n\n\tconst mapSelector = ( selector, selectorName ) => {\n\t\tconst resolver = resolvers[ selectorName ];\n\t\tif ( ! resolver ) {\n\t\t\tselector.hasResolver = false;\n\t\t\treturn selector;\n\t\t}\n\n\t\tconst selectorResolver = ( ...args ) => {\n\t\t\tasync function fulfillSelector() {\n\t\t\t\tconst state = store.getState();\n\t\t\t\tif ( typeof resolver.isFulfilled === 'function' && resolver.isFulfilled( state, ...args ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { metadata } = store.__unstableOriginalGetState();\n\t\t\t\tif ( metadataSelectors.hasStartedResolution( metadata, selectorName, args ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstore.dispatch( metadataActions.startResolution( selectorName, args ) );\n\t\t\t\tawait fulfillResolver( store, mappedResolvers, selectorName, ...args );\n\t\t\t\tstore.dispatch( metadataActions.finishResolution( selectorName, args ) );\n\t\t\t}\n\n\t\t\tfulfillSelector( ...args );\n\t\t\treturn selector( ...args );\n\t\t};\n\t\tselectorResolver.hasResolver = true;\n\t\treturn selectorResolver;\n\t};\n\n\treturn {\n\t\tresolvers: mappedResolvers,\n\t\tselectors: mapValues( selectors, mapSelector ),\n\t};\n}\n\n/**\n * Calls a resolver given arguments\n *\n * @param {Object} store        Store reference, for fulfilling via resolvers\n * @param {Object} resolvers    Store Resolvers\n * @param {string} selectorName Selector name to fulfill.\n * @param {Array} args          Selector Arguments.\n */\nasync function fulfillResolver( store, resolvers, selectorName, ...args ) {\n\tconst resolver = get( resolvers, [ selectorName ] );\n\tif ( ! resolver ) {\n\t\treturn;\n\t}\n\n\tconst action = resolver.fulfill( ...args );\n\tif ( action ) {\n\t\tawait store.dispatch( action );\n\t}\n}\n"]}